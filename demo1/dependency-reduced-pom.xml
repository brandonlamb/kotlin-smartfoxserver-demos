<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.example</groupId>
  <artifactId>demo1</artifactId>
  <version>0.1</version>
  <build>
    <sourceDirectory>src/main/kotlin</sourceDirectory>
    <testSourceDirectory>src/test/kotlin</testSourceDirectory>
    <finalName>DemoExtension</finalName>
    <plugins>
      <plugin>
        <artifactId>maven-shade-plugin</artifactId>
        <version>${maven-shade-plugin.version}</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer>
                  <mainClass>${exec.mainClass}</mainClass>
                </transformer>
                <transformer />
              </transformers>
              <filters>
                <filter>
                  <artifact>ch.qos.logback:logback-classic</artifact>
                  <excludes>
                    <exclude>org/slf4j/**</exclude>
                  </excludes>
                </filter>
                <filter>
                  <artifact>com.microsoft.azure:*</artifact>
                  <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                  </excludes>
                </filter>
              </filters>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.6.0</version>
        <configuration>
          <executable>java</executable>
          <arguments>
            <argument>-noverify</argument>
            <argument>-XX:TieredStopAtLevel=1</argument>
            <argument>-classpath</argument>
            <classpath />
            <argument>${exec.mainClass}</argument>
          </arguments>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <executions>
          <execution>
            <id>default-compile</id>
            <phase>none</phase>
          </execution>
          <execution>
            <id>default-testCompile</id>
            <phase>none</phase>
          </execution>
          <execution>
            <id>java-compile</id>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>java-test-compile</id>
            <phase>test-compile</phase>
            <goals>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <proc>none</proc>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-maven-plugin</artifactId>
        <version>${kotlin.version}</version>
        <executions>
          <execution>
            <id>kapt</id>
            <goals>
              <goal>kapt</goal>
            </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>src/main/kotlin</sourceDir>
              </sourceDirs>
              <annotationProcessorPaths>
                <annotationProcessorPath>
                  <groupId>io.micronaut</groupId>
                  <artifactId>micronaut-inject-java</artifactId>
                  <version>${micronaut.version}</version>
                </annotationProcessorPath>
                <annotationProcessorPath>
                  <groupId>io.micronaut</groupId>
                  <artifactId>micronaut-validation</artifactId>
                  <version>${micronaut.version}</version>
                </annotationProcessorPath>
              </annotationProcessorPaths>
            </configuration>
          </execution>
          <execution>
            <id>compile</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>src/main/kotlin</sourceDir>
              </sourceDirs>
            </configuration>
          </execution>
          <execution>
            <id>test-kapt</id>
            <goals>
              <goal>test-kapt</goal>
            </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>src/test/kotlin</sourceDir>
              </sourceDirs>
              <annotationProcessorPaths>
                <annotationProcessorPath>
                  <groupId>io.micronaut</groupId>
                  <artifactId>micronaut-inject-java</artifactId>
                  <version>${micronaut.version}</version>
                </annotationProcessorPath>
                <annotationProcessorPath>
                  <groupId>io.micronaut</groupId>
                  <artifactId>micronaut-validation</artifactId>
                  <version>${micronaut.version}</version>
                </annotationProcessorPath>
              </annotationProcessorPaths>
            </configuration>
          </execution>
          <execution>
            <id>test-compile</id>
            <goals>
              <goal>test-compile</goal>
            </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>src/test/kotlin</sourceDir>
                <sourceDir>target/generated-sources/kapt/test</sourceDir>
              </sourceDirs>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-maven-noarg</artifactId>
            <version>${kotlin.version}</version>
          </dependency>
          <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-maven-allopen</artifactId>
            <version>${kotlin.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <compilerPlugins>
            <plugin>no-arg</plugin>
            <plugin>all-open</plugin>
          </compilerPlugins>
          <pluginOptions>
            <option>all-open:annotation=io.micronaut.aop.Around</option>
            <option>no-arg:annotation=javax.inject.Singleton</option>
            <option>no-arg:annotation=javax.ws.rs.ext.Provider</option>
            <option>no-arg:annotation=org.junit.runner.RunWith</option>
            <option>no-arg:annotation=com.smartfoxserver.v2.annotations.Instantiation</option>
            <option>all-open:annotation=javax.inject.Singleton</option>
            <option>all-open:annotation=javax.ws.rs.ext.Provider</option>
            <option>all-open:annotation=org.junit.runner.RunWith</option>
            <option>all-open:annotation=com.smartfoxserver.v2.annotations.Instantiation</option>
          </pluginOptions>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <repositories>
    <repository>
      <id>jcenter.bintray.com</id>
      <url>https://jcenter.bintray.com</url>
    </repository>
  </repositories>
  <dependencies>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-annotation-processing-maven</artifactId>
      <version>1.3.30</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.micronaut</groupId>
      <artifactId>micronaut-inject-java</artifactId>
      <version>1.1.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.smartfoxserver</groupId>
      <artifactId>sfs2x</artifactId>
      <version>2.13.4</version>
      <scope>system</scope>
      <systemPath>${basedir}/lib/sfs2x.jar</systemPath>
    </dependency>
    <dependency>
      <groupId>com.smartfoxserver</groupId>
      <artifactId>sfs2x-core</artifactId>
      <version>2.13.4</version>
      <scope>system</scope>
      <systemPath>${basedir}/lib/sfs2x-core.jar</systemPath>
    </dependency>
  </dependencies>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.micronaut</groupId>
        <artifactId>micronaut-bom</artifactId>
        <version>${micronaut.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <properties>
    <micronaut.version>1.1.0</micronaut.version>
    <tinylog.version>1.3.6</tinylog.version>
    <kotlin.version>1.3.30</kotlin.version>
    <maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>
    <exec.mainClass>com.example.Main</exec.mainClass>
    <maven.compiler.testTarget>${maven.compiler.target}</maven.compiler.testTarget>
    <kotlin.compiler.jvmTarget>1.8</kotlin.compiler.jvmTarget>
    <targetJdk>${maven.compiler.argument.target}</targetJdk>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.argument.testSource>${maven.compiler.testSource}</maven.compiler.argument.testSource>
    <maven.compiler.source>1.8</maven.compiler.source>
    <downloadSources>true</downloadSources>
    <maven.compiler.argument.source>${maven.compiler.source}</maven.compiler.argument.source>
    <maven-shade-plugin.version>3.2.1</maven-shade-plugin.version>
    <maven.compiler.argument.testTarget>${maven.compiler.testTarget}</maven.compiler.argument.testTarget>
    <maven.compiler.target>1.8</maven.compiler.target>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <maven.compiler.argument.target>${maven.compiler.target}</maven.compiler.argument.target>
    <mbassador.version>1.3.2</mbassador.version>
    <reactor-core.version>3.2.8.RELEASE</reactor-core.version>
    <maven.compiler.testSource>${maven.compiler.source}</maven.compiler.testSource>
    <jdk.version>1.8</jdk.version>
    <sourceReleaseAssemblyDescriptor>source-release</sourceReleaseAssemblyDescriptor>
  </properties>
</project>
